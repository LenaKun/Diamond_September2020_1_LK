//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CC.Data
{
    public partial class ScSubsidyLevel
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
        public virtual ICollection<AgencyGroup> AgencyGroups
        {
            get
            {
                if (_agencyGroups == null)
                {
                    var newCollection = new FixupCollection<AgencyGroup>();
                    newCollection.CollectionChanged += FixupAgencyGroups;
                    _agencyGroups = newCollection;
                }
                return _agencyGroups;
            }
            set
            {
                if (!ReferenceEquals(_agencyGroups, value))
                {
                    var previousValue = _agencyGroups as FixupCollection<AgencyGroup>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupAgencyGroups;
                    }
                    _agencyGroups = value;
                    var newValue = value as FixupCollection<AgencyGroup>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupAgencyGroups;
                    }
                }
            }
        }
        private ICollection<AgencyGroup> _agencyGroups;
    
        public virtual ICollection<ScSubsidyAmount> ScSubsidyAmounts
        {
            get
            {
                if (_scSubsidyAmounts == null)
                {
                    var newCollection = new FixupCollection<ScSubsidyAmount>();
                    newCollection.CollectionChanged += FixupScSubsidyAmounts;
                    _scSubsidyAmounts = newCollection;
                }
                return _scSubsidyAmounts;
            }
            set
            {
                if (!ReferenceEquals(_scSubsidyAmounts, value))
                {
                    var previousValue = _scSubsidyAmounts as FixupCollection<ScSubsidyAmount>;
                    if (previousValue != null)
                    {
                        previousValue.CollectionChanged -= FixupScSubsidyAmounts;
                    }
                    _scSubsidyAmounts = value;
                    var newValue = value as FixupCollection<ScSubsidyAmount>;
                    if (newValue != null)
                    {
                        newValue.CollectionChanged += FixupScSubsidyAmounts;
                    }
                }
            }
        }
        private ICollection<ScSubsidyAmount> _scSubsidyAmounts;

        #endregion

        #region Association Fixup
    
        private void FixupAgencyGroups(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (AgencyGroup item in e.NewItems)
                {
                    item.ScSubsidyLevel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (AgencyGroup item in e.OldItems)
                {
                    if (ReferenceEquals(item.ScSubsidyLevel, this))
                    {
                        item.ScSubsidyLevel = null;
                    }
                }
            }
        }
    
        private void FixupScSubsidyAmounts(object sender, NotifyCollectionChangedEventArgs e)
        {
            if (e.NewItems != null)
            {
                foreach (ScSubsidyAmount item in e.NewItems)
                {
                    item.ScSubsidyLevel = this;
                }
            }
    
            if (e.OldItems != null)
            {
                foreach (ScSubsidyAmount item in e.OldItems)
                {
                    if (ReferenceEquals(item.ScSubsidyLevel, this))
                    {
                        item.ScSubsidyLevel = null;
                    }
                }
            }
        }

        #endregion

    }
}
