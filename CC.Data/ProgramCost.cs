//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CC.Data
{
    public partial class ProgramCost
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int ProgramCostTypeId
        {
            get { return _programCostTypeId; }
            set
            {
                if (_programCostTypeId != value)
                {
                    if (ProgramCostType != null && ProgramCostType.Id != value)
                    {
                        ProgramCostType = null;
                    }
                    _programCostTypeId = value;
                }
            }
        }
        private int _programCostTypeId;
    
        public virtual decimal Amount
        {
            get;
            set;
        }
    
        public virtual decimal PercentFundedByCC
        {
            get;
            set;
        }
    
        public virtual int SubReportId
        {
            get { return _subReportId; }
            set
            {
                if (_subReportId != value)
                {
                    if (SubReport != null && SubReport.Id != value)
                    {
                        SubReport = null;
                    }
                    _subReportId = value;
                }
            }
        }
        private int _subReportId;

        #endregion

        #region Navigation Properties
    
    	
    	public virtual ProgramCostType ProgramCostType
        {
            get { return _programCostType; }
            set
            {
                if (!ReferenceEquals(_programCostType, value))
                {
                    var previousValue = _programCostType;
                    _programCostType = value;
                    FixupProgramCostType(previousValue);
                }
            }
        }
        private ProgramCostType _programCostType;
    
    	
    	public virtual SubReport SubReport
        {
            get { return _subReport; }
            set
            {
                if (!ReferenceEquals(_subReport, value))
                {
                    var previousValue = _subReport;
                    _subReport = value;
                    FixupSubReport(previousValue);
                }
            }
        }
        private SubReport _subReport;

        #endregion

        #region Association Fixup
    
        private void FixupProgramCostType(ProgramCostType previousValue)
        {
            if (previousValue != null && previousValue.ProgramCosts.Contains(this))
            {
                previousValue.ProgramCosts.Remove(this);
            }
    
            if (ProgramCostType != null)
            {
                if (!ProgramCostType.ProgramCosts.Contains(this))
                {
                    ProgramCostType.ProgramCosts.Add(this);
                }
                if (ProgramCostTypeId != ProgramCostType.Id)
                {
                    ProgramCostTypeId = ProgramCostType.Id;
                }
            }
        }
    
        private void FixupSubReport(SubReport previousValue)
        {
            if (previousValue != null && previousValue.ProgramCosts.Contains(this))
            {
                previousValue.ProgramCosts.Remove(this);
            }
    
            if (SubReport != null)
            {
                if (!SubReport.ProgramCosts.Contains(this))
                {
                    SubReport.ProgramCosts.Add(this);
                }
                if (SubReportId != SubReport.Id)
                {
                    SubReportId = SubReport.Id;
                }
            }
        }

        #endregion

    }
}
