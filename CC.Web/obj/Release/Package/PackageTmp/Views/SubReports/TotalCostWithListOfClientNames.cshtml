@model SubReportDetailsModel
@{
    ViewBag.Title = "Detailed Report";
}

@section Header
{
<script id="dt" type="text/javascript">
	    //simple datatable init

	    var editLink = '<button type="button" class="edit">Edit</button>';
	    var changeLink = '<button type="button" class="change">Change</button>';

	    var deleteLink = '<button type="button" class="delete">Delete</button>';
	    var cancelLink = '<button type="button" class="cancel">Cancel</button>';
	    var updateLink = '<button type="button" class="update">Update</button>';

	    var editable = '@Model.CanBeEdited' == 'True';

	    var dataTable = null;


	    $(document).ready(function () {

            dataTable = $('table.grid').dataTable({
                "bJQueryUI": true,
                "sPaginationType": "full_numbers",
                "bServerSide": true,
                "bProcessing": true,
                "aaSorting": [[1, "asc"], [2, "asc"]],
                "sAjaxSource": '@Url.Action("GetRows", new { Id = Model.Id })',
                "aoColumns": [
                    { "mData": 0 },
                    { "mData": 1 },
                    { "mData": 2 },
                    { "mData": 3 },
                    { "mData": 4, "mRender": function (a) { return '<a href="@Url.Action("Details", "Clients")/' + a + '">' + a + '</a>'; } },
                    { "mData": 5 },
                     @if (Model.ServiceName == "Funeral Expenses") //Funeral Expenses
                     {
                         <text>
                     { "mData": 6, "mRender": function (val) { return renderDecimal(val); } },
                     { "mData": 7 },
                        </text>
                     }
                    else
                      {
                          <text>
                    { "mData": 6 },
                         </text>
                       }
{
    "mData": 0,
						"bVisible": '@Model.CanBeEdited' == 'True',
                    	"mRender": function (a, b, c) {
        var html = changeLink;
        if (a) {
            html += editLink;
        }

        return html;
    }
}
	            ],
	            "fnServerParams": function (aoData) {
                             aoData.push({ name: "IE", value: Math.random() });
                             aoData.push({ name: "AppBudgetServiceId", value: "@Model.AppBudgetServiceId" });
                             aoData.push({ name: "AgencyId", value: "@Model.AgencyId" });
                             aoData.push({ name: "@Html.FieldNameFor(f => f.Filter.ClientName)", value: $('#@Html.FieldIdFor(f => f.Filter.ClientName)').val() });
                             aoData.push({ name: "@Html.FieldNameFor(f => f.Filter.ClientId)", value: $('#@Html.FieldIdFor(f => f.Filter.ClientId)').val() });
                             aoData.push({ name: "@Html.FieldNameFor(f => f.Filter.ReportedOnly)", value: $('#@Html.FieldIdFor(f => f.Filter.ReportedOnly)').val() });
                         },
	            "fnRowCallback": function (nRow, aData, iDisplayIndex) {
	                /* set tr id. assume the id is in the first column of data */
	                $(nRow).attr("clientId", aData[4]);
	                $(nRow).attr("id", aData[0]);
	                $(nRow).attr("subReportId", '@Model.Id');

                             return nRow;
                         }
                     });
	        $('button.filter').click(function () {
	            dataTable.fnDraw(false);

	        });
	        $('button.reset').click(function () {
	            $(this).closest('table').find(':input').val('');
	            dataTable.fnDraw(false);
	        });



	    });
</script>
    @if (Model.CanBeEdited)
    {
        <script>
		    function showSuccess(data) {
                if (data.success) {
                    //if (Model.ServiceName == "Funeral Expenses")
                   // {

                   // }
                   // else {
                        $('table.grid').dataTable().fnDraw(false);
                        $('div#totals').load('@Url.Action("GetTotals", new { Id = Model.Id })' + '?IE=' + Math.random());
                   // }
                }
		        else {
                    var errstr = '<ul class="error"><li>' + data.errors.join('</li><li>') + '</li></ul>';
                    $(errstr).dialog({
                        modal: true,
                        buttons: {
                            Ok: function () {
                                $(this).dialog("close");
                                $('table.grid tbody').find('input, button').removeAttr('disabled');
                            },
                            Cancel: function () {
                                $(this).dialog("close");
                                $('table.grid').dataTable().fnDraw(false);
                            }
                        }
                    });

                }
            }
            function showFail() {
                $('<p>an error occured ... </p>').dialog({
                    modal: true,
                    buttons: {
                        Ok: function () {
                            $(this).dialog("close");
                            $('table.grid tbody').find('input, button').removeAttr('disabled');
                        }
                    }
                });
            }

            //LK
            </script>
            if (Model.ServiceName == "Funeral Expenses")
                            { 
        <script>
            $('table.grid button.edit').live('click', function() {
                                    tr = $(this).closest('tr');
                                    var oData = dataTable.fnGetData(tr[0]);
                                    tr.find('td:nth-child(7)').html('').append(
                    $('<input type="text" name="Amount"/>').val(oData[6]).addClass('required')
                                    );
                                    tr.find('td:nth-child(8)').html('').append(
                 $('<input type="text" name="UniqueCircumstances"/>').val(oData[7])
                                   );

                                    tr.find('td:nth-child(9)').html(updateLink + cancelLink);
                                });
            $('table.grid button.cancel').live('click', function() {
                            dataTable.fnDraw(false)
            });
            $('table.grid button.update').live('click', function () {
                var tr = $(this).closest('tr');
                var oData = $('table.grid').dataTable().fnGetData(tr.get(0));
                console.log("odata");
                console.log(oData);
                var d = {
                    Id: oData[0],
                    SubReportId: '@Model.Id',
                    ClientId: oData[4],
                    Amount: tr.find('td:nth-child(7) input').val(),
                    Remarks: tr.find('td:nth-child(8) input').val(),
                };
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveClientReport")',
                    data: d,
                    success: function (data) {
                            showSuccess(data);
                        },
                    error: function () {
                            alert('error');
                        }
                    });


            });
            $('table.grid button.change').live('click', function () {
                    tr = $(this).closest('tr');
                    var d = {
                    Id: tr.attr('id'),
                    clientId: tr.attr('clientId'),
                    subReportId: tr.attr('subReportId'),
                    IE: Math.random(),
                    data: []
               };

                $('table.grid tbody tr').find('input, button').attr('disabled', 'disabled');

                var request = $.ajax({
                url: '@Url.Action("Modify")',
                    type: 'POST',
                    dataType: "json",
                    data: d
                })
                request.success(function (data, textStatus, jqXHR) {
                    showSuccess(data);
            });
                request.done(function (msg) {

                });
                request.fail(function (jqXHR, textStatus) {
                    showFail();
                });
            });

            //});
           </script> 
        }

        else  //not Funeral Expenses
        {
         <script>
              $('table.grid button.edit').live('click', function () {
                    tr = $(this).closest('tr');
                    var oData = dataTable.fnGetData(tr[0]);

                    tr.find('td:nth-child(7)').html('').append(
                        $('<input type="text" name="UniqueCircumstances"/>').val(oData[6])
                    );
                    tr.find('td:nth-child(8)').html(updateLink + cancelLink);
                });

                $('table.grid button.cancel').live('click', function () {
                    dataTable.fnDraw(false)
                });

                $('table.grid button.update').live('click', function () {
                    var tr = $(this).closest('tr');
                    var oData = $('table.grid').dataTable().fnGetData(tr.get(0));
                    console.log("odata");
                    console.log(oData);
                    var d = {
                        Id: oData[0],
                        SubReportId: '@Model.Id',
                        ClientId: oData[4],
                        //Amount: tr.find('td:nth-child(7) input').val(),
                        Remarks: tr.find('td:nth-child(7) input').val()
                    };
              $.ajax({
                    type: 'POST',
                    url: '@Url.Action("SaveClientReport")',
                    data: d,
                    success: function (data) {
                            showSuccess(data);
                        },
                    error: function () {
                            alert('error');
                        }
                    });


            });
            $('table.grid button.change').live('click', function () {
                    tr = $(this).closest('tr');
                    var d = {
                    Id: tr.attr('id'),
                    clientId: tr.attr('clientId'),
                    subReportId: tr.attr('subReportId'),
                    IE: Math.random(),
                    data: []
                };

                $('table.grid tbody tr').find('input, button').attr('disabled', 'disabled');

                var request = $.ajax({
                url: '@Url.Action("Modify")',
                    type: 'POST',
                    dataType: "json",
                    data: d
                })
                request.success(function (data, textStatus, jqXHR) {
                    showSuccess(data);
            });
                request.done(function (msg) {

                });
                request.fail(function (jqXHR, textStatus) {
                    showFail();
                });
            });

         </script>

        }

    }


}
<h2>Detailed Report </h2>
@Html.ValidationSummary()
<p>
    <a href="@Url.Action("Details", "MainReports", new { id = Model.MainReportId })" class="button">Go to Financial Report</a>
    @if (Model.CanBeEdited)
    {<a href="@Url.Action("Create", "SubReports", new { Id = Model.Id, AppBudgetServiceId = Model.AppBudgetServiceId, MainReportId = Model.MainReportId })" class="button">Import</a>}
</p>
@Html.Partial("Header", Model.DetailsHeader)
<table class="filter horizontal">
    <tr>
        <th style="white-space: nowrap">
            Filter By:
        </th>
        <td style="width: 100%">
            <div class="display-item">
                @Html.LabelFor(f => f.Filter.ClientName)
                @Html.EditorFor(f => f.Filter.ClientName)
            </div>
            <div class="display-item">
                @Html.LabelFor(f => f.Filter.ClientId)
                @Html.EditorFor(f => f.Filter.ClientId)
            </div>
            <div class="display-item">
                @Html.LabelFor(f => f.Filter.ReportedOnly)
                @Html.DropDownListFor(f => f.Filter.ReportedOnly, Model.Filter.ReportedOnlySelectList)
            </div>
            <div class="display-item">
                <button type="button" class="filter">
                    Go
                </button>
                <button type="button" class="reset">
                    Reset
                </button>
            </div>
        </td>
    </tr>
</table>
<table class="grid">
    <thead>
        <tr>
            <th>
                Id
            </th>
            <th>
                Client First Name
            </th>
            <th>
                Client Last Name
            </th>
            <th>
                Client Approval Status
            </th>
            <th>
                CC ID
            </th>
            <th>
                Reported
            </th>
            @if (Model.ServiceName == "Funeral Expenses") //Funeral Expenses
            {
                <th class="edit decimal" data-name="Amount" data-type="decimal">
                    Amount
                </th>
                <th class="edit" data-name="UniqueCircumstances" data-type="string">Unique Circumstances</th>
            }
            else
            {
            <th class="edit" data-name="UniqueCircumstances" data-type="string">Unique Circumstances</th>
            }
            @if (Model.CanBeEdited)
            {
                <th></th>
            }
        </tr>
    </thead>
    <tbody></tbody>
</table>
<div id="totals"></div>
<div>
    <a href="@Url.Action("Export", new { id = Model.Id })" class="button">Export</a>
</div>
<p>
    <a href="@Url.Action("Details", "MainReports", new { id = Model.MainReportId })" class="button">Go to Financial Report </a>
    @if (Model.CanBeEdited)
    {<a href="@Url.Action("Create", "SubReports", new { Id = Model.Id, AppBudgetServiceId = Model.AppBudgetServiceId, MainReportId = Model.MainReportId })" class="button">Import</a>}
    @if (Model.CanBeEdited)
    {
        <button type="button" class="button" onclick="setToDef()">
            Set To Default
        </button>
        <script>
            function setToDef() {
                dalert(function () {
                    var d = {
                        Id: '@Model.Id'
                    };
                    $.ajax({
                        type: 'POST',
                        url: '@Url.Action("DeleteChildReportRows")',
                        data: d,
                        success: function (data) {
                            location.reload();
                        },
                        error: function () {
                            alert('error');
                        }
                    });

                })
            }
            function dalert(yesCallback) {
                $('<div></div>').html('All Sub Report Record will be deleted, continue ?').dialog({
                    modal: true,
                    buttons: {
                        "Yes": function () {
                            $(this).dialog("close");
                            $(this).dialog("destroy");
                            yesCallback();
                        },
                        "No": function () {
                            $(this).dialog("close");
                            $(this).dialog("destroy");

                        }
                    }

                });
            }
        </script>

    }
</p>

