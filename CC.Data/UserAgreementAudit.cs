//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CC.Data
{
    public partial class UserAgreementAudit
    {
        #region Primitive Properties
    
        public virtual int UserId
        {
            get { return _userId; }
            set
            {
                if (_userId != value)
                {
                    if (User != null && User.Id != value)
                    {
                        User = null;
                    }
                    _userId = value;
                }
            }
        }
        private int _userId;
    
        public virtual int UserAgreementId
        {
            get { return _userAgreementId; }
            set
            {
                if (_userAgreementId != value)
                {
                    if (UserAgreement != null && UserAgreement.Id != value)
                    {
                        UserAgreement = null;
                    }
                    _userAgreementId = value;
                }
            }
        }
        private int _userAgreementId;
    
        public virtual System.DateTime Date
        {
            get;
            set;
        }
    
        public virtual string IP
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
    	
    	public virtual UserAgreement UserAgreement
        {
            get { return _userAgreement; }
            set
            {
                if (!ReferenceEquals(_userAgreement, value))
                {
                    var previousValue = _userAgreement;
                    _userAgreement = value;
                    FixupUserAgreement(previousValue);
                }
            }
        }
        private UserAgreement _userAgreement;
    
    	
    	public virtual User User
        {
            get { return _user; }
            set
            {
                if (!ReferenceEquals(_user, value))
                {
                    var previousValue = _user;
                    _user = value;
                    FixupUser(previousValue);
                }
            }
        }
        private User _user;

        #endregion

        #region Association Fixup
    
        private void FixupUserAgreement(UserAgreement previousValue)
        {
            if (previousValue != null && previousValue.UserAgreementAudits.Contains(this))
            {
                previousValue.UserAgreementAudits.Remove(this);
            }
    
            if (UserAgreement != null)
            {
                if (!UserAgreement.UserAgreementAudits.Contains(this))
                {
                    UserAgreement.UserAgreementAudits.Add(this);
                }
                if (UserAgreementId != UserAgreement.Id)
                {
                    UserAgreementId = UserAgreement.Id;
                }
            }
        }
    
        private void FixupUser(User previousValue)
        {
            if (previousValue != null && previousValue.UserAgreementAudits.Contains(this))
            {
                previousValue.UserAgreementAudits.Remove(this);
            }
    
            if (User != null)
            {
                if (!User.UserAgreementAudits.Contains(this))
                {
                    User.UserAgreementAudits.Add(this);
                }
                if (UserId != User.Id)
                {
                    UserId = User.Id;
                }
            }
        }

        #endregion

    }
}
