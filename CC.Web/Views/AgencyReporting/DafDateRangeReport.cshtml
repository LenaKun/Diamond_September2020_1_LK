@model AgencyReportingDafDateRangeModel
@{
    ViewBag.Title = "DafDateRangeReport";
	Layout = "~/Views/AgencyReporting/_Layout.cshtml";
}

<h2>DAF Date Range Report</h2>

<fieldset>
	<legend>Filter</legend>
	<form action="@Url.Action("ExportDafDateRange")" method="get">
		@if (!User.IsInRole("RegionReadOnly"))
		{
			<div class="editor-item">
				@Html.LabelFor(model => model.SelectedRegionId)
				@Html.EditorFor(model => model.SelectedRegionId)
			</div>
		}
		<div class="editor-item">
			@Html.LabelFor(model => model.SelectedCountryId)
			@Html.EditorFor(model => model.SelectedCountryId)
		</div>
		<div class="editor-item">
			@Html.LabelFor(model => model.SelectedAgencyGroupId)
			@Html.EditorFor(model => model.SelectedAgencyGroupId)
		</div>
		<div class="editor-item">
			@Html.LabelFor(model => model.From)
			@Html.EditorFor(model => model.From)
		</div>
		<div class="editor-item">
			@Html.LabelFor(model => model.To)
			@Html.EditorFor(model => model.To)
		</div>
		<div class="editor-item">
			<button type="button" class="filter">Go</button>
			<a href="@Request.Url.GetLeftPart(UriPartial.Path)" class="button">Reset</a>
			<button type="submit">Export</button>
		</div>
	</form>
	<table id="agencyReportingTable">
		<tbody>
			<tr>
				<td>
					<h3>
						Please select desired filter values and click the Go button
					</h3>
				</td>
			</tr>
		</tbody>
	</table>
	<script>
        $(function () {
            function initDataTable() {
                var getFitlerParams = function () {
                    var result = [];
                    result.push({ "name": "SelectedRegionId", "value": $("#@Html.FieldIdFor(model => model.SelectedRegionId)").val() });
                    result.push({ "name": "SelectedAgencyGroupId", "value": $("#@Html.FieldIdFor(model => model.SelectedAgencyGroupId)").val() });
                    result.push({ "name": "SelectedCountryId", "value": $("#@Html.FieldIdFor(model => model.SelectedCountryId)").val() });
                	result.push({ "name": "From", "value": $("#@Html.FieldIdFor(model => model.From)").val() });
                	result.push({ "name": "To", "value": $("#@Html.FieldIdFor(model => model.To)").val() });
                    return result;
                };
                var oTable = $('#agencyReportingTable').dataTable({
                    "aaSorting": [[0, "asc"]],
                    "bServerSide": true,
                    "bSortable": false,
                    "bFilter": false,
                    "sAjaxSource": '@Url.Action("DafDateRangeDataTable")',
                    "fnServerParams": function (aoData) {
                        var filter = getFitlerParams();
                        for (var i = 0; i < filter.length; i++) {
                            aoData.push(filter[i]);
                        }
                    },
                    "aoColumns": [{
                        "mData": "ClientId",
                        "sTitle": "CC_ID",
                    	"bSortable": false
                    }, {
                    	"mData": "DiagnosticScore",
                    	"sTitle": "DIAGNOSTIC_SCORE",
                    	"bSortable": false,
                    	"mRender": function (val) { return renderDecimal(val); }
                    }, {
                        "mData": "StartDate",
                        "sTitle": "START_DATE",
                        "bSortable": false,
                        "mRender": function (val) { return renderDate(val); }
                    }]
                });
                $('.filter,.reset').click(function () {
                    oTable.fnDraw();
                });
            }
            $('.filter').one('click', function () {
                initDataTable();
            })
        });
	</script>
	<script>
        var region = $('#@Html.FieldIdFor(model => model.SelectedRegionId)').select2({
            width: 300,
            allowClear: true,
            placeholder: "All REGIONs",
            initSelection: function (element, callback) {
                var id = $(element).val();
                if (id !== "") {
                    $.ajax('@Url.Content("~/data/dataservice.svc/Regions")' + '(' + id + ')', {
                        dataType: "json",
                    }).done(function (data) {
                        var a = data.d;
                        callback({ id: a.Id, text: a.Name });
                    }).fail(function () {
                        callback(null);
                    });
                }
            },
            ajax: {
                url: '@Url.Content("~/data/dataservice.svc/Regions")',
                dataType: "json",
                data: function (term) {
                    var filters = [];
                    if (term) {
                        filters.push("substringof('" + escape(term) + "', Name) eq true");
                    }
                    return {
                        "$filter": filters.join(" and "),
                        "$orderby": "Name"
                    };
                },
                results: function (data) {
                    return {
                        results: $.map(data.d, function (a) { return { id: a.Id, text: a.Name } })
                    };
                }
            }

        }).change(function () {
        	country.select2('val', '');
        	ser.select2('val', '');
        });
        var country = $('#@Html.FieldIdFor(model => model.SelectedCountryId)').select2({
            width: 300,
            allowClear: true,
            placeholder: "All Countries",
            initSelection: function (element, callback) {
                var id = $(element).val();
                if (id !== "") {
                    $.ajax('@Url.Content("~/data/dataservice.svc/Countries")' + '(' + id + ')', {
                        dataType: "json",
                    }).done(function (data) {
                        var a = data.d;
                        callback({ id: a.Id, text: a.Name });
                    }).fail(function () {
                        callback(null);
                    });
                }
            },
            ajax: {
                url: '@Url.Content("~/data/dataservice.svc/Countries")',
                dataType: "json",
                data: function (term) {
                    var filters = [];
                    if (region.val()) {
                        filters.push("RegionId eq " + region.val());
                    }
                    if (term) {
                        filters.push("substringof('" + escape(term) + "', Name) eq true");
                    }
                    return {
                        "$filter": filters.join(" and "),
                        "$orderby": "Name"
                    };
                },
                results: function (data) {
                    return {
                        results: $.map(data.d, function (a) { return { id: a.Id, text: a.Name } })
                    };
                }
            }
        }).change(function () {
        	ser.select2('val', '');
        });
        var ser = $('#@Html.FieldIdFor(model => model.SelectedAgencyGroupId)').select2({
            width: 300,
            allowClear: true,
            placeholder: "All SERs",
            initSelection: function (element, callback) {
                var id = $(element).val();
                if (id !== "") {
                    $.ajax('@Url.Content("~/data/dataservice.svc/AgencyGroups")' + '(' + id + ')', {
                        dataType: "json",
                    }).done(function (data) {
                        var a = data.d;
                        callback({ id: a.Id, text: a.Name });
                    }).fail(function () {
                        callback(null);
                    });
                }
            },
            ajax: {
                url: '@Url.Content("~/data/dataservice.svc/AgencyGroups")',
                dataType: "json",
                data: function (term) {
                    var filters = [];
                    if (term) {
                        filters.push("substringof('" + escape(term) + "', Name) eq true");
                    }
                    return {
                        "$filter": filters.join(" and "),
                        "$orderby": "Name"
                    };
                },
                results: function (data) {
                    return {
                        results: $.map(data.d, function (a) { return { id: a.Id, text: a.Name } })
                    };
                }
            }

        });
	</script>

</fieldset>


