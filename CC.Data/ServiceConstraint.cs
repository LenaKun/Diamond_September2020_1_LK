//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CC.Data
{
    public partial class ServiceConstraint
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual Nullable<int> ServiceId
        {
            get { return _serviceId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_serviceId != value)
                    {
                        if (Service != null && Service.Id != value)
                        {
                            Service = null;
                        }
                        _serviceId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _serviceId;
    
        public virtual Nullable<int> ServiceTypeId
        {
            get { return _serviceTypeId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_serviceTypeId != value)
                    {
                        if (ServiceType != null && ServiceType.Id != value)
                        {
                            ServiceType = null;
                        }
                        _serviceTypeId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _serviceTypeId;
    
        public virtual Nullable<int> FundId
        {
            get { return _fundId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_fundId != value)
                    {
                        if (Fund != null && Fund.Id != value)
                        {
                            Fund = null;
                        }
                        _fundId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private Nullable<int> _fundId;
    
        public virtual Nullable<decimal> MinExpPercentage
        {
            get;
            set;
        }
    
        public virtual Nullable<decimal> MaxExpPercentage
        {
            get;
            set;
        }
    
        public virtual bool Fatal
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
    	
    	public virtual Fund Fund
        {
            get { return _fund; }
            set
            {
                if (!ReferenceEquals(_fund, value))
                {
                    var previousValue = _fund;
                    _fund = value;
                    FixupFund(previousValue);
                }
            }
        }
        private Fund _fund;
    
    	
    	public virtual Service Service
        {
            get { return _service; }
            set
            {
                if (!ReferenceEquals(_service, value))
                {
                    var previousValue = _service;
                    _service = value;
                    FixupService(previousValue);
                }
            }
        }
        private Service _service;
    
    	
    	public virtual ServiceType ServiceType
        {
            get { return _serviceType; }
            set
            {
                if (!ReferenceEquals(_serviceType, value))
                {
                    var previousValue = _serviceType;
                    _serviceType = value;
                    FixupServiceType(previousValue);
                }
            }
        }
        private ServiceType _serviceType;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupFund(Fund previousValue)
        {
            if (previousValue != null && previousValue.ServiceConstraints.Contains(this))
            {
                previousValue.ServiceConstraints.Remove(this);
            }
    
            if (Fund != null)
            {
                if (!Fund.ServiceConstraints.Contains(this))
                {
                    Fund.ServiceConstraints.Add(this);
                }
                if (FundId != Fund.Id)
                {
                    FundId = Fund.Id;
                }
            }
            else if (!_settingFK)
            {
                FundId = null;
            }
        }
    
        private void FixupService(Service previousValue)
        {
            if (previousValue != null && previousValue.ServiceConstraints.Contains(this))
            {
                previousValue.ServiceConstraints.Remove(this);
            }
    
            if (Service != null)
            {
                if (!Service.ServiceConstraints.Contains(this))
                {
                    Service.ServiceConstraints.Add(this);
                }
                if (ServiceId != Service.Id)
                {
                    ServiceId = Service.Id;
                }
            }
            else if (!_settingFK)
            {
                ServiceId = null;
            }
        }
    
        private void FixupServiceType(ServiceType previousValue)
        {
            if (previousValue != null && previousValue.ServiceConstraints.Contains(this))
            {
                previousValue.ServiceConstraints.Remove(this);
            }
    
            if (ServiceType != null)
            {
                if (!ServiceType.ServiceConstraints.Contains(this))
                {
                    ServiceType.ServiceConstraints.Add(this);
                }
                if (ServiceTypeId != ServiceType.Id)
                {
                    ServiceTypeId = ServiceType.Id;
                }
            }
            else if (!_settingFK)
            {
                ServiceTypeId = null;
            }
        }

        #endregion

    }
}
