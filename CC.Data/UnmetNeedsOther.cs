//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CC.Data
{
    public partial class UnmetNeedsOther
    {
        #region Primitive Properties
    
        public virtual int ClientId
        {
            get { return _clientId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_clientId != value)
                    {
                        if (Client != null && Client.Id != value)
                        {
                            Client = null;
                        }
                        _clientId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _clientId;
    
        public virtual int ServiceTypeId
        {
            get { return _serviceTypeId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_serviceTypeId != value)
                    {
                        if (ServiceType != null && ServiceType.Id != value)
                        {
                            ServiceType = null;
                        }
                        _serviceTypeId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private int _serviceTypeId;
    
        public virtual decimal Amount
        {
            get;
            set;
        }
    
        public virtual string CurrencyId
        {
            get { return _currencyId; }
            set
            {
                try
                {
                    _settingFK = true;
                    if (_currencyId != value)
                    {
                        if (Currency != null && Currency.Id != value)
                        {
                            Currency = null;
                        }
                        _currencyId = value;
                    }
                }
                finally
                {
                    _settingFK = false;
                }
            }
        }
        private string _currencyId;

        #endregion

        #region Navigation Properties
    
    	
    	public virtual Client Client
        {
            get { return _client; }
            set
            {
                if (!ReferenceEquals(_client, value))
                {
                    var previousValue = _client;
                    _client = value;
                    FixupClient(previousValue);
                }
            }
        }
        private Client _client;
    
    	
    	public virtual Currency Currency
        {
            get { return _currency; }
            set
            {
                if (!ReferenceEquals(_currency, value))
                {
                    var previousValue = _currency;
                    _currency = value;
                    FixupCurrency(previousValue);
                }
            }
        }
        private Currency _currency;
    
    	
    	public virtual ServiceType ServiceType
        {
            get { return _serviceType; }
            set
            {
                if (!ReferenceEquals(_serviceType, value))
                {
                    var previousValue = _serviceType;
                    _serviceType = value;
                    FixupServiceType(previousValue);
                }
            }
        }
        private ServiceType _serviceType;

        #endregion

        #region Association Fixup
    
        private bool _settingFK = false;
    
        private void FixupClient(Client previousValue)
        {
            if (previousValue != null && previousValue.UnmetNeedsOthers.Contains(this))
            {
                previousValue.UnmetNeedsOthers.Remove(this);
            }
    
            if (Client != null)
            {
                if (!Client.UnmetNeedsOthers.Contains(this))
                {
                    Client.UnmetNeedsOthers.Add(this);
                }
                if (ClientId != Client.Id)
                {
                    ClientId = Client.Id;
                }
            }
        }
    
        private void FixupCurrency(Currency previousValue)
        {
            if (previousValue != null && previousValue.UnmetNeedsOthers.Contains(this))
            {
                previousValue.UnmetNeedsOthers.Remove(this);
            }
    
            if (Currency != null)
            {
                if (!Currency.UnmetNeedsOthers.Contains(this))
                {
                    Currency.UnmetNeedsOthers.Add(this);
                }
                if (CurrencyId != Currency.Id)
                {
                    CurrencyId = Currency.Id;
                }
            }
            else if (!_settingFK)
            {
                CurrencyId = null;
            }
        }
    
        private void FixupServiceType(ServiceType previousValue)
        {
            if (previousValue != null && previousValue.UnmetNeedsOthers.Contains(this))
            {
                previousValue.UnmetNeedsOthers.Remove(this);
            }
    
            if (ServiceType != null)
            {
                if (!ServiceType.UnmetNeedsOthers.Contains(this))
                {
                    ServiceType.UnmetNeedsOthers.Add(this);
                }
                if (ServiceTypeId != ServiceType.Id)
                {
                    ServiceTypeId = ServiceType.Id;
                }
            }
        }

        #endregion

    }
}
