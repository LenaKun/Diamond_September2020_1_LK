@model DafCreateModel
@{
	ViewBag.Title = Resources.Resource.CreateDaf;
}
<h2>
	@ViewBag.Title
</h2>
<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<form method="post" enctype="multipart/form-data">
	@Html.ValidationSummary()
	@if (Model != null)
	{
		<fieldset>
			@Html.LabelFor(model => model.ClientId)
			@Html.DisplayFor(model => model.ClientId)
			@Html.LabelFor(model => model.AgencyName)
			@Html.DisplayFor(model => model.AgencyName)
			@Html.LabelFor(model => model.ClientFirstName)
			@Html.DisplayFor(model => model.ClientFirstName)
			@Html.LabelFor(model => model.ClientLastName)
			@Html.DisplayFor(model => model.ClientLastName)
		</fieldset>
		<fieldset>
			<legend>DAF</legend>
			<div class="editor-label">
				@Html.LabelFor(model => model.EvaluatorId)
			</div>
            <div class="editor-field">
                @Html.EditorFor(model => model.EvaluatorId)
                @Html.ValidationMessageFor(model => model.EvaluatorId)
               
                


                <script>
					$(function () {
						var evaluator = $('#@Html.FieldIdFor(model => model.EvaluatorId)');
						var pageSize = 30;
						var clientMap = function (a) {
							return { id: a.Id, text: a.FirstName + " " + a.LastName, AgencyId: a.AgencyId }
						}
						evaluator.select2({
							width: 300,
							quietMillis: 250,
							placeholder: "Select an option",
							allowClear: true,
							initSelection: function (element, callback) {
								var item = {
									id: parseInt(@Model.EvaluatorId),
									text: '@Model.EvaluatorName',
								};
								if(item.id){
									callback(item);
								}
							},
							ajax: {
								url: '@Url.Action("Evaluators")',
								dataType: "json",
								data: function (term, page) {
									return{
										agencyId: @Model.AgencyId,
										term: term,
										page: page,
									};
								},
								results: function (data) {
									return data;
								}
							}
						})
					})
                </script>
                
            </div>
			@if (User.IsInRole(FixedRoles.DafEvaluator) || User.IsInRole(FixedRoles.Ser) || User.IsInRole(FixedRoles.SerAndReviewer))
			{
				<script>
					$(function(){
						$('#@Html.FieldIdFor(model=>model.EvaluatorId)').change(function(){
							var currentUserId = parseInt('@ViewBag.CurrentUserId');
							var selectedUserId = parseInt($(this).val());
							var show =currentUserId !== selectedUserId;
							$('#container1').toggle(show);
						});
					})
				</script>
				if (ViewBag.CurrentUserId == Model.EvaluatorId)
				{
					<script>
						$(function(){
							$('#container1').hide();
						})
					</script>
				}
				<div id="container1">
					<div class="editor-label">
						@Html.LabelFor(model => model.FileName)
						<span class="error" title="This field is required">*</span>
					</div>
					<div class="editor-field">
						<input type="file" name="file" />
					</div>
					<div class="editor-label">
						<label>
							@Html.CheckBoxFor(f => f.Disclaimer)
							<span> @Html.DisplayNameFor(f => f.Disclaimer)</span>
							<span class="error" title="This field is required">*</span>
						</label>
					</div>
					<div class="editor-field">

					</div>
				</div>
			}
			<p>
				<input type="submit" value="Create" />
				<a href="@Url.Action("Index")">Cancel</a>
			</p>
		</fieldset>
	}
</form>
<div>
	@Html.ActionLink("Back to List", "Index")
</div>
