//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Collections.Specialized;

namespace CC.Data
{
    public partial class MedicalEquipmentReport
    {
        #region Primitive Properties
    
        public virtual int Id
        {
            get;
            set;
        }
    
        public virtual int SubReportId
        {
            get { return _subReportId; }
            set
            {
                if (_subReportId != value)
                {
                    if (SubReport != null && SubReport.Id != value)
                    {
                        SubReport = null;
                    }
                    _subReportId = value;
                }
            }
        }
        private int _subReportId;
    
        public virtual int ClientId
        {
            get { return _clientId; }
            set
            {
                if (_clientId != value)
                {
                    if (Client != null && Client.Id != value)
                    {
                        Client = null;
                    }
                    _clientId = value;
                }
            }
        }
        private int _clientId;
    
        public virtual int EquipmentTypeId
        {
            get { return _equipmentTypeId; }
            set
            {
                if (_equipmentTypeId != value)
                {
                    if (MedicalEquipmentType != null && MedicalEquipmentType.Id != value)
                    {
                        MedicalEquipmentType = null;
                    }
                    _equipmentTypeId = value;
                }
            }
        }
        private int _equipmentTypeId;
    
        public virtual decimal Quantity
        {
            get;
            set;
        }
    
        public virtual decimal Amount
        {
            get;
            set;
        }

        #endregion

        #region Navigation Properties
    
    		
    	public virtual MedicalEquipmentType MedicalEquipmentType
        {
            get { return _medicalEquipmentType; }
            set
            {
                if (!ReferenceEquals(_medicalEquipmentType, value))
                {
                    var previousValue = _medicalEquipmentType;
                    _medicalEquipmentType = value;
                    FixupMedicalEquipmentType(previousValue);
                }
            }
        }
        private MedicalEquipmentType _medicalEquipmentType;
    
    	
    	public virtual SubReport SubReport
        {
            get { return _subReport; }
            set
            {
                if (!ReferenceEquals(_subReport, value))
                {
                    var previousValue = _subReport;
                    _subReport = value;
                    FixupSubReport(previousValue);
                }
            }
        }
        private SubReport _subReport;
    
    	
    	public virtual Client Client
        {
            get { return _client; }
            set
            {
                if (!ReferenceEquals(_client, value))
                {
                    var previousValue = _client;
                    _client = value;
                    FixupClient(previousValue);
                }
            }
        }
        private Client _client;

        #endregion

        #region Association Fixup
    
        private void FixupMedicalEquipmentType(MedicalEquipmentType previousValue)
        {
            if (previousValue != null && previousValue.MedicalEquipmentReports.Contains(this))
            {
                previousValue.MedicalEquipmentReports.Remove(this);
            }
    
            if (MedicalEquipmentType != null)
            {
                if (!MedicalEquipmentType.MedicalEquipmentReports.Contains(this))
                {
                    MedicalEquipmentType.MedicalEquipmentReports.Add(this);
                }
                if (EquipmentTypeId != MedicalEquipmentType.Id)
                {
                    EquipmentTypeId = MedicalEquipmentType.Id;
                }
            }
        }
    
        private void FixupSubReport(SubReport previousValue)
        {
            if (previousValue != null && previousValue.MedicalEquipmentReports.Contains(this))
            {
                previousValue.MedicalEquipmentReports.Remove(this);
            }
    
            if (SubReport != null)
            {
                if (!SubReport.MedicalEquipmentReports.Contains(this))
                {
                    SubReport.MedicalEquipmentReports.Add(this);
                }
                if (SubReportId != SubReport.Id)
                {
                    SubReportId = SubReport.Id;
                }
            }
        }
    
        private void FixupClient(Client previousValue)
        {
            if (previousValue != null && previousValue.MedicalEquipmentReports.Contains(this))
            {
                previousValue.MedicalEquipmentReports.Remove(this);
            }
    
            if (Client != null)
            {
                if (!Client.MedicalEquipmentReports.Contains(this))
                {
                    Client.MedicalEquipmentReports.Add(this);
                }
                if (ClientId != Client.Id)
                {
                    ClientId = Client.Id;
                }
            }
        }

        #endregion

    }
}
