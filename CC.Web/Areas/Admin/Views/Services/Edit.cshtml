@model CC.Data.Service
@{
    ViewBag.Title = "Edit";
    
}

<h2>Edit</h2>

<script src="@Url.Content("~/Scripts/jquery.validate.min.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.min.js")" type="text/javascript"></script>
<script type="text/javascript">

	function showExceptional() {
		if ($('#TypeId').val() == 8 && ($('#ReportingMethodId').val() == 5 || $('#ReportingMethodId').val() == 14)) {
			$('#exceptional').show();
		}
		else {
			$('#exceptional').hide();

		}
	}

	$(document).ready(function () {
		showExceptional();

		$('#TypeId').change(function () {
			showExceptional();
		});

		$('#ReportingMethodId').change(function () {
			showExceptional();
		});

		$('#@Html.FieldIdFor(f => f.ExceptionalHomeCareHours)').change(function () {
			if ($(this).is(':checked')) {
				$('#@Html.FieldIdFor(f => f.CoPGovHoursValidation)').removeAttr('disabled');
			}
			else {
				$('#@Html.FieldIdFor(f => f.CoPGovHoursValidation)').attr('disabled', 'disabled');
				$('#@Html.FieldIdFor(f => f.CoPGovHoursValidation)').removeAttr('checked');
			}
		}).change();
	});

</script>


@using (Html.BeginForm())
{
	@Html.ValidationSummary(true)
<fieldset>
    <legend>Service</legend>

    @Html.HiddenFor(model => model.Id)

    <div class="editor-label">
        @Html.LabelFor(model => model.Name)
    </div>
    <div class="editor-field">
        @Html.TextBoxFor(model => model.Name,null, new { @style = "width: 730px;max-width: 730px;" })
        @Html.ValidationMessageFor(model => model.Name)
    </div>
   @if (ViewBag.IsFluxxAdmin ?? false) { 
    <div class="editor-label">
        @Html.LabelFor(model => model.FluxxFieldName)  
    </div>
   
    <div class="editor-field">
        @Html.TextBoxFor(m => m.FluxxFieldName, null, new {  @style = "width: 730px;max-width: 730px;" } )
        @Html.ValidationMessageFor(model => model.FluxxFieldName)
    </div>
   }
    <div class="editor-label">
        @Html.LabelFor(model => model.ReportingMethodId)
    </div>
    <div class="editor-field">
        @Html.DropDownList("ReportingMethodId", string.Empty)
        @Html.ValidationMessageFor(model => model.ReportingMethodId)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.TypeId, "ServiceType")
    </div>
    <div class="editor-field">
        @Html.DropDownList("TypeId", String.Empty)
        @Html.ValidationMessageFor(model => model.TypeId)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.ServiceLevel)
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.ServiceLevel)
        @Html.ValidationMessageFor(model => model.ServiceLevel)
    </div>

    <div class="editor-label">@Html.LabelFor(f => f.EnforceTypeConstraints)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.EnforceTypeConstraints)
    </div>

    <div class="display-label">@Html.LabelFor(f => f.SingleClientPerYearAgency)</div>
    <div class="display-field">
        @Html.EditorFor(model => model.SingleClientPerYearAgency)
    </div>
    <div id="exceptional">
        <div class="editor-label">@Html.LabelFor(f => f.ExceptionalHomeCareHours)</div>
        <div class="editor-field">
            @Html.EditorFor(model => model.ExceptionalHomeCareHours)
        </div>
        <div class="editor-label">@Html.LabelFor(f => f.CoPGovHoursValidation)</div>
        <div class="editor-field">
            @Html.EditorFor(model => model.CoPGovHoursValidation)
        </div>
    </div>
    <div class="editor-label">@Html.LabelFor(f => f.Active)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Active)
    </div>
    <div class="editor-label">@Html.LabelFor(f => f.Personnel)</div>
    <div class="editor-field">
        @Html.EditorFor(model => model.Personnel)
    </div>




    <div class="editor-label">
        @Html.LabelFor(model => model.DefaultConstraint.MinExpPercentage, "Minimum Percentage")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.DefaultConstraint.MinExpPercentage)
        @Html.ValidationMessageFor(model => model.DefaultConstraint.MinExpPercentage)
    </div>

    <div class="editor-label">
        @Html.LabelFor(model => model.DefaultConstraint.MaxExpPercentage, "Maximum Percentage")
    </div>
    <div class="editor-field">
        @Html.EditorFor(model => model.DefaultConstraint.MaxExpPercentage)
        @Html.ValidationMessageFor(model => model.DefaultConstraint.MaxExpPercentage)
    </div>
    <p>
        <input type="submit" value="Save" />
    </p>
</fieldset>
}

<div>
	@Html.ActionLink("Back to List", "Index")
</div>
